; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir = Inc
src_dir = Src
default_envs = nucleo_f446re_eth	; switch to whatever you are using the debugger for at the present time.

[env]
platform = ststm32
framework = stm32cube
lib_archive = no
lib_ldf_mode = off
upload_protocol = stlink
debug_tool = stlink

[STM32F4xx_global]
build_flags =
	-D SPI_CS_IRQ=EXTI4_IRQn	; Needed for both targets for compilation
	-I FATFS/App
	-I FATFS/Target
	-I Middlewares/Third_Party/FatFs/src
lib_deps = 
	FATFS/App
	FATFS/Target
	Middlewares/Third_Party/FatFs
	bblanchon/ArduinoJson@^7.4.1

[STMF4xx_eth]
extends = STM32F4xx_global
build_flags = ${STM32F4xx_global.build_flags}
    -D ETH_CTRL=1 ; choose between ETH_CTRL=1 or SPI_CTRL=1 for config uploading and LinuxCNC control.
	-D _WIZCHIP_=5500
	-D WIZ_RST="\"PB_5"\"
	-D SPI_CS="\"PA_4"\"
	-D SPI_CLK="\"PA_5"\"
	-D SPI_MISO="\"PA_6"\"
	-D SPI_MOSI="\"PA_7"\"
lib_deps = 
	${STM32F4xx_global.lib_deps}
	W5500_Networking=file://Src/remora-core/drivers/W5500_Networking/W5500_Networking.zip

[STMF4xx_spi]
extends = STM32F4xx_global
build_flags = 
	${STM32F4xx_global.build_flags}
    -D SPI_CTRL=1			
	-D SPI_CS="\"PA_4"\"
	-D SPI_CLK="\"PA_5"\"
	-D SPI_MISO="\"PA_6"\"
	-D SPI_MOSI="\"PA_7"\"
	
; Build targets for Nucleo F446ze
[env:nucleo_f446ze_eth]
extends = STMF4xx_eth
board = nucleo_f446ze
board_build.ldscript = LinkerScripts/STM32F446XX_ETHCOMMS_NOBL.ld  ; JSON upload and storage memory allocated
board_upload.maximum_size = 475136   ;  Reduce flash space to avaiable space
build_flags = 
	${STMF4xx_eth.build_flags}
	-D UART_PORT=USART3

[env:nucleo_f446ze_spi]
extends = STMF4xx_spi
board = nucleo_f446ze
build_flags = 
	${STMF4xx_spi.build_flags}
	-D UART_PORT=USART3

; Build targets for Nucleo F446re
[env:nucleo_f446re_eth]
extends = STMF4xx_eth
board = nucleo_f446re
board_build.ldscript = LinkerScripts/STM32F446XX_ETHCOMMS_NOBL.ld 
board_upload.maximum_size = 475136   
build_flags = 
	${STMF4xx_eth.build_flags}
	-D UART_PORT=USART2

[env:nucleo_f446re_spi]
extends = STMF4xx_spi
board = nucleo_f446re
build_flags = 
	${STMF4xx_spi.build_flags}
	-D UART_PORT=USART2

[env:Octopus_446]				; please note that this is a test of how various boards could be supported by stitching together platformIO ini flags and linker scripts. This might work, but has not been tested yet. 
extends = STMF4xx_spi
board = nucleo_f446ze
board_build.mcu = stm32f446zet6
board_build.ldscript = LinkerScripts/STM32F446XX_OCTOPUS_BL.ld 
board_upload.maximum_size = 229376
build_flags = 
	${STMF4xx_spi.build_flags} 
	-D HAS_BOOTLOADER=1
	-D UART_PORT=USART3